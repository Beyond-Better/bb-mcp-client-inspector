{
  "nodeModulesDir": "auto",
  "tasks": {
    "check": "deno fmt --check . && deno lint . && deno check",
    "dev": "vite",
    "build": "vite build",
    "start": "deno serve -A _fresh/server.js",
    "update": "deno run -A -r jsr:@fresh/update ."
    "mcp-inspector": "npx @modelcontextprotocol/inspector",
    "check-types": "deno task -c mcp-server/deno.jsonc check && deno task -c fresh-ui/deno.jsonc check",
    "tool:check-types": "deno task -c mcp-server/deno.jsonc check && deno task -c fresh-ui/deno.jsonc check",
    "tool:check-types:mcp-server": "deno task -c mcp-server/deno.jsonc check",
    "tool:check-types:fresh-ui": "deno task -c fresh-ui/deno.jsonc check",
    "tool:test": "deno task -c mcp-server/deno.jsonc test && deno task -c fresh-ui/deno.jsonc test",
    "tool:test:all": "deno task -c mcp-server/deno.jsonc --check test && deno task -c fresh-ui/deno.jsonc --check test",
    "tool:test:mcp-server": "deno task -c mcp-server/deno.jsonc test",
    "tool:test:fresh-ui": "deno task -c fresh-ui/deno.jsonc test",
    "tool:test:file": "deno test ",
    "tool:format": "deno task -c mcp-server/deno.jsonc format && deno task -c fresh-ui/deno.jsonc format",
  },
  // Local development: use import_map.dev.json (points to local bb-mcp-server)
  "importMap": "./import_map.dev.json",
  // Production: use import_map.json (points to jsr:@beyondbetter/bb-mcp-server)
  // "importMap": "./import_map.json",
  "compilerOptions": {
    "lib": [
      "dom",
      "dom.asynciterable",
      "dom.iterable",
      "deno.ns",
      "deno.unstable"
    ],
    "jsx": "precompile",
    "jsxImportSource": "preact"
  }
}
